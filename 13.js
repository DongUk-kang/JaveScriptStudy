/**
 * 13 스코프
 * 프로그래밍 언어의 기본적이며 중요한 개념
 * 
 * var 키워드로 선언한 변수와 let, const 키워드로 선언한 변수의 스코프도 다르게 작동
 * 스코프는 변수및 함수와 깊은 관련이있음
 */

// 13 - 1
function add(x, y) {
    /**
     * 매개변수는 함수 몸체 내부에서만 참조할 수 있음
     * 즉, 매개변수의 스코프는 함수 몸체 내부
     */
    console.log(x, y);
    return x + y;
}
add(2, 5);
// 매개 변수는 함수 몸체 내부에서만 참조 할 수 있음
console.log(x, y); // 레퍼런스 에러발생

/**
 * 변수는 코드의 가장 바깥 영역뿐 아니라 코드 블록이나 함수 몸체 내에서도 선언가능
 * 이때 코드블록이나 함수는 중첩될 수 있음
 */

// 13 - 2
var var1 = 1; // 코드의 가장 바깥 영역에서 선언한 변수

if (true) {
    var var2 = 2; // 코드 블록 내에서 선언한 변수
    if (true) {
        var var3 = 3;
    }
}

function foo() {
    var var4 = 4; // 함수 내에서 선언한 변수
    function bar() {
        var var5 = 5; // 중첩된 함수내에서 선언한 변수
    }
}
console.log(var1); // 1
console.log(var2); // 2
console.log(var3); // 3
console.log(var4); // 레퍼런스에러
console.log(var5);  // 레퍼런스 에러

/**
 * 변수는 자신이 선언된 위치에 의해 자신이 유효한 범위, 즉 다른 코드가 변수 자신을 참조할수 있는 범위가 결정
 * 변수뿐만 아니라 모든 식별자가 동일
 * 모든 식별자 (변수이름, 함수 이름 ,클래스 이름 등등 )는 자신이 선언된 위치에 의해 다른코드가 식별자 자신을 참조할 수 있는 유효범위가 결정
 * 이를 스코프라고 지칭 즉, 소코프는 식별자가 유효한 범위를 말함
 */

