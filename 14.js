// 14 전역변수

/**
 * 14.1 변수의 생명 주기
 * 
 * 14.1.1 지역변수의 생명주기
 * 
 * 변수는 선언에 의해 생성되고 할당을 통해 값을 갖음 그리고 언젠간 소멸
 * 변수는 생물과 유사하게 생성되고 소명되는 생명주기가 있음
 * 
 * 변수에 생명주기가 없다면 한번 선언된 변수는 프로그램을 종료하지 않는 한 영원히 메모리 공간을 점유
 */

// 14 - 01
function foo() {
    var x = 'local';
    console.log(x); //local
    return x;
}
foo();
console.log(x); // 문법에러

/**
 * 지역변수 x는 foo함수가 호출되기 이전까지는 생성되지 않음
 * foo함수를 호출하지 않을경우 함수 내부의 변수 선언문이 실행되지 않음 */


// 14 - 2
var x = 'global';
function foo() {
    console.log(x);
    var x = 'local';
}

foo();
console.log(x); 

/**
 * foo함수 내부에서 선언된 지역변수 x는 이미선언되었고 언디파인드로 초기화 되어있음
 * 전역변수 x참조가아닌 지역변수 x를 참조해 값을 출력함
 * 
 * 지역변수는 함수 전체에서 유효
 * 변수 할당문이 실행되기 이전까지는 언디파인드값을 갖음
 * 
 * 호이스팅은 스코프를 단위로 동작한다.
 * 전역 변수의 호이스팅은 전역변수의 선언이 전역 스코프의 선두로 끌어 올려진것처럼 동작함
 * 
 * 전역변수는 전역전체에 유호함 지역변수의 호이스팅은 지역변수의 선언이 지역 스코프의 선두로 끌어 올려진것처럼 동작함
 * 
 * 지역변수는 함수 전체에서 유효
 * 
 * 호이스팅은 변수 선언이 스코프의 선두로 끌어 올려진것처럼 동작하는 js고유의 특징을 말함
 */

// 14.1.2 전역변수의 생명 주기 
/**
 * 함수와 달리 전역 코드는 명시적인 호출 없이 실행됨
 * 전역 코드는 함수 호출과 같이 전역코드를 실행하는 특별한 진입점이 없고 코드가 로드되자마자 곧바로 해석및 실행
 * 
 * 함수의 함수 몸체의 마지막 문 또는 반환문이 실행되면 종료함 하지만
 * 전역 코드에는 반환문을 사용 할 수 없으므로 마지막문이 실행되어 더이상 실행할 문이없을때 종료함
 * 
 * var 키워드로 선언한 전역 변수는 전역 객체의 프로퍼티가됨
 * 이는 전역변수의 생명 주기가 전역 객체의 생명주기와 일치함
 * 
 * 
 */


/**
 * 14.3.1 즉시 실행 함수
 * 
 * 함수 정의와 동시에 호출되는 즉시 실햄 함수는 단한번만 호출됨
 * 
 * 모든 코드를 즉시 실행하 함수로 감싸면 모든 변수는 즉시 실행함수의 지역변수가됨 
 * 
 * 
 */

// 14 - 04
(function () {
    var foo = 10;
    //...
}());

console.log(foo); //레퍼런스 에러


// 14.3.2 네임스페이스 객체
/**
 * 전역에 네임스페이스 역할을 담당할 객체를 생성하고 전역변수처럼 사용하고 싶은 변수를 프로퍼티로 추가하는 방법
 */

// 14 - 6
var MYAPP = {}; // 전역 네임스페이스 객체
/**
 * 네임스페이스 객체에 또 다른 네임스페이스 객체를 프로퍼티로 추가해서 네임스페이스를 계층적으로 구성할 수 있음
 */

var MYAPP = {};
MYAPP.person = {
    name: 'Lee',
    address: 'Seoul'
};
console.log(MYAPP.preson.address); // Seoul

/**
 * 14.3.3 
 * 
 * 모듈 패턴은 크랠스를 모방해서 관련이쓴ㄴ 변수와 함수를 모아 즉시 실행함수로 감싸 하나의 모듈을 만듬
 * 
 * 모듈패턴은 자바스크립트의 기능인 클로저를 기반으로 동작함
 * 
 * 모듈 패턴의 특징은 전역 변수의 억제를 물론 캡슐화까지 구현할 수잇음
 */

// 14 - 7
// var Counter = (function () {
//     // private 변수
//     var num = 0;

//     //외부로 공개할 데이터나 메서드를 프로퍼티로 추가한 객체를 반환함
//     return {
//         increase() {
//             return ++num;
//         },
//         decrease() {
//             return --num;
//         }
//     },
    
// }());

/**
 * 즉시 실행 함수는 객체를 반환함
 * 이객체에서는 외부에 노출하고 싶은 변ㅅ후나 함수를 담아 반환함
 */


//14.3.4 es6모듈
/**
 * es6모듈을 ㅅㅏ용하면 더는 전역 변수를 사용불가 
 * 
 */